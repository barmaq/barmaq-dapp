name: Build and Deploy to Kubernetes

on:
  push:
    branches: [ main ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: barmaq/barmaq-dapp
  K8S_NAMESPACE: app

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 1. Забираем код
      - name: Checkout
        uses: actions/checkout@v3

      # 2. Логинимся в Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # 3. Собираем и пушим образ
      - name: Build and Push
        uses: docker/build-push-action@v3
        with:
          context: .
          push: true
          tags: |
            ${{ env.IMAGE_NAME }}:latest
            ${{ env.IMAGE_NAME }}:${{ github.sha }}

  deploy:
    needs: build
    name: Deploy to Kubernetes
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      
      - name: Configure Kubernetes CLI
        uses: azure/k8s-set-context@v4
        with:
          method: kubeconfig
          kubeconfig: ${{ secrets.KUBE_CONFIG }}

      # 5. Деплоим в Kubernetes
      - name: Deploy to Cluster
        run: |
          # Обновляем image tag в deployment
          sed -i "s|${{ env.IMAGE_NAME }}:.*|${{ env.IMAGE_NAME }}:${{ github.sha }}|" k8s/deployment.yaml
          
          # Применяем манифесты
          kubectl apply -f k8s/deployment.yaml -n ${{ env.K8S_NAMESPACE }}
          kubectl apply -f k8s/service.yaml -n ${{ env.K8S_NAMESPACE }}
          # Если есть Ingress:
          #kubectl apply -f k8s/ingress.yaml -n ${{ env.K8S_NAMESPACE }}

          # Проверяем поды
          kubectl get pods -n ${{ env.K8S_NAMESPACE }}
          
          # Ждем, пока деплоймент обновится
          kubectl rollout status deployment/barmaq-dapp -n ${{ env.K8S_NAMESPACE }} --timeout=300s